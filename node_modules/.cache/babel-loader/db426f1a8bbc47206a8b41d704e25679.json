{"ast":null,"code":"var _jsxFileName = \"/Users/anujin/Desktop/test/src/UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from './redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Avatar } from \"@material-ui/core\";\nimport StarsIcon from '@material-ui/icons/Stars';\nimport Button from '@material-ui/core/Button';\nimport DetailDialog from './DetailDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 'auto',\n    width: '100%',\n    maxWidth: 700,\n    border: '1px solid gray'\n  }\n}));\n\nfunction UserContainer({\n  userData,\n  fetchUsers\n}) {\n  _s();\n\n  const classes = useStyles();\n  const users = userData.users;\n  const loading = userData.loading;\n  const error = userData.error;\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const renderList = () => {\n    return users.map((user, i) => {\n      const {\n        avatar_url,\n        login,\n        site_admin\n      } = user;\n      return /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            height: 50\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            align: \"center\",\n            style: {\n              float: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: avatar_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [\" \", login]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [\" \", site_admin ? /*#__PURE__*/_jsxDEV(StarsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 54\n            }, this) : \"\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            style: {\n              float: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: handleClickOpen,\n              children: \"Detail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DetailDialog, {\n              open: open,\n              close: handleClose,\n              data: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this), renderList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserContainer, \"/058ULEF5Ocytzn2/IjLFi2zlC0=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserContainer;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainer\");","map":{"version":3,"sources":["/Users/anujin/Desktop/test/src/UserContainer.js"],"names":["React","useEffect","useState","connect","useSelector","useDispatch","fetchUsers","makeStyles","List","ListItem","ListItemAvatar","ListItemText","Avatar","StarsIcon","Button","DetailDialog","useStyles","root","margin","width","maxWidth","border","UserContainer","userData","classes","users","loading","error","open","setOpen","handleClickOpen","handleClose","renderList","map","user","i","avatar_url","login","site_admin","height","float","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport { fetchUsers } from './redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Avatar } from \"@material-ui/core\";\nimport StarsIcon from '@material-ui/icons/Stars';\nimport Button from '@material-ui/core/Button';\nimport DetailDialog from './DetailDialog';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 'auto',\n        width: '100%',\n        maxWidth: 700,\n        border: '1px solid gray',\n    },\n}))\n\nfunction UserContainer({ userData, fetchUsers }) {\n    const classes = useStyles()\n    const users = userData.users\n    const loading = userData.loading\n    const error = userData.error\n    const [open, setOpen] = useState(false);\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        fetchUsers()\n    }, [])\n\n\n    const renderList = () => {\n        return users.map((user, i) => {\n            const { avatar_url, login, site_admin } = user\n            return (\n\n                <List component=\"nav\" className={classes.root} >\n                    <ListItem style={{ height: 50 }} key={i} >\n                        <ListItemText primary={i + 1} />\n                        <ListItemAvatar align=\"center\" style={{ float: 'right' }}>\n                            <Avatar src={avatar_url} />\n                        </ListItemAvatar>\n                        <ListItemText> {login}</ListItemText>\n                        <ListItemText> {site_admin ? <StarsIcon /> : \"\"} </ListItemText>\n                        <ListItemText style={{ float: 'right' }}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                                Detail\n                            </Button>\n                            <DetailDialog open={open} close={handleClose} data={user} />\n                        </ListItemText>\n\n                    </ListItem>\n                </List>\n            )\n        }\n        )\n    }\n\n    return loading ? (\n        <h2>Loading</h2>\n    ) : error ? (\n        <h2>{error}</h2>\n    ) : (\n        <div><h2>User List</h2>\n            {renderList()}\n\n        </div>\n\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        userData: state.users\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer)"]},"metadata":{},"sourceType":"module"}