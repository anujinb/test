{"ast":null,"code":"var _jsxFileName = \"/Users/anujin/Desktop/test/src/DetailDialog.js\",\n    _s = $RefreshSig$();\n\nimport { Dialog, DialogContent, DialogActions, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"20px\"\n  },\n  content: {\n    borderRadius: \"10px\",\n    textAlign: \"center\",\n    color: \"#000000\",\n    padding: \"0px 7px 0 7px\"\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: \"18px\",\n    marginBottom: 10,\n    marginTop: 0\n  },\n  text: {\n    fontSize: \"14px\",\n    lineHeight: \"20px\",\n    fontWeight: 400,\n    marginTop: 0\n  },\n  button: {\n    color: \"#8D1CD4\",\n    borderTop: \"1px solid #D2D2D2\",\n    justifyContent: \"center\",\n    fontWeight: 500,\n    fontSize: \"14px\",\n    cursor: \"pointer\"\n  }\n});\nexport default function DetailDialog(props) {\n  _s();\n\n  const {\n    open,\n    onClose\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      className: classes.root,\n      open: open,\n      onClose: onClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DetailDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailDialog\");","map":{"version":3,"sources":["/Users/anujin/Desktop/test/src/DetailDialog.js"],"names":["Dialog","DialogContent","DialogActions","DialogContentText","DialogTitle","makeStyles","useStyles","root","margin","content","borderRadius","textAlign","color","padding","title","fontWeight","fontSize","marginBottom","marginTop","text","lineHeight","button","borderTop","justifyContent","cursor","DetailDialog","props","open","onClose","classes"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,aAAhC,EAA+CC,iBAA/C,EAAkEC,WAAlE,QAAqF,mBAArF;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN,GADmB;AAIzBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAE,MADT;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAE,SAHF;AAILC,IAAAA,OAAO,EAAE;AAJJ,GAJgB;AAUzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,GADT;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHC,IAAAA,YAAY,EAAE,EAHX;AAIHC,IAAAA,SAAS,EAAE;AAJR,GAVkB;AAgBzBC,EAAAA,IAAI,EAAE;AACFH,IAAAA,QAAQ,EAAE,MADR;AAEFI,IAAAA,UAAU,EAAE,MAFV;AAGFL,IAAAA,UAAU,EAAE,GAHV;AAIFG,IAAAA,SAAS,EAAE;AAJT,GAhBmB;AAsBzBG,EAAAA,MAAM,EAAE;AACJT,IAAAA,KAAK,EAAE,SADH;AAEJU,IAAAA,SAAS,EAAE,mBAFP;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJR,IAAAA,UAAU,EAAE,GAJR;AAKJC,IAAAA,QAAQ,EAAE,MALN;AAMJQ,IAAAA,MAAM,EAAE;AANJ;AAtBiB,CAAD,CAA5B;AAgCA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,KAA1B;AACA,QAAMG,OAAO,GAAGvB,SAAS,EAAzB;AACA,sBACI;AAAA,2BAEI,QAAC,MAAD;AACI,MAAA,SAAS,EAAEuB,OAAO,CAACtB,IADvB;AAEI,MAAA,IAAI,EAAEoB,IAFV;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,yBAAgB,oBAJpB;AAKI,0BAAiB,0BALrB;AAAA,8BAOI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEC,OAAO,CAACpB,OAAlC;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAcI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA1BuBgB,Y;UAEJnB,S;;;KAFImB,Y","sourcesContent":["import { Dialog, DialogContent, DialogActions, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        margin: \"20px\",\n    },\n    content: {\n        borderRadius: \"10px\",\n        textAlign: \"center\",\n        color: \"#000000\",\n        padding: \"0px 7px 0 7px\",\n    },\n    title: {\n        fontWeight: 500,\n        fontSize: \"18px\",\n        marginBottom: 10,\n        marginTop: 0,\n    },\n    text: {\n        fontSize: \"14px\",\n        lineHeight: \"20px\",\n        fontWeight: 400,\n        marginTop: 0,\n    },\n    button: {\n        color: \"#8D1CD4\",\n        borderTop: \"1px solid #D2D2D2\",\n        justifyContent: \"center\",\n        fontWeight: 500,\n        fontSize: \"14px\",\n        cursor: \"pointer\",\n    },\n});\n\nexport default function DetailDialog(props) {\n    const { open, onClose } = props;\n    const classes = useStyles();\n    return (\n        <div>\n\n            <Dialog\n                className={classes.root}\n                open={open}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                <DialogContent className={classes.content}>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means sending anonymous location data to\n                        Google, even when no apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}